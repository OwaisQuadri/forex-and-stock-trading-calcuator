/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradesizecalculator;

import java.text.DecimalFormat;

/**
 *
 * @author 100697281
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        accountBalance = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pipsToStoploss = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();
        stockPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        marginField = new javax.swing.JTextField();
        usdToggle = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        marginLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        titleLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Day Trading Calculator");
        getContentPane().add(titleLabel);
        titleLabel.setBounds(0, 6, 400, 31);

        jLabel1.setText("Price: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 150, 41, 16);

        jLabel2.setText("Account Balance:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 90, 110, 16);

        accountBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        accountBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountBalanceActionPerformed(evt);
            }
        });
        getContentPane().add(accountBalance);
        accountBalance.setBounds(250, 80, 80, 22);

        jLabel3.setText("Pips to Stoploss:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(70, 180, 110, 16);

        pipsToStoploss.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pipsToStoploss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipsToStoplossActionPerformed(evt);
            }
        });
        getContentPane().add(pipsToStoploss);
        pipsToStoploss.setBounds(280, 170, 50, 22);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Max Shares:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 250, 100, 16);

        outputLabel.setText("0");
        getContentPane().add(outputLabel);
        outputLabel.setBounds(220, 250, 110, 16);

        feedbackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackLabel.setText("press \"CALCULATE\" when each entry has been filled");
        getContentPane().add(feedbackLabel);
        feedbackLabel.setBounds(0, 290, 400, 40);

        calculateButton.setText("CALCULATE");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calculateButton);
        calculateButton.setBounds(130, 210, 120, 22);

        stockPrice.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        stockPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockPriceActionPerformed(evt);
            }
        });
        getContentPane().add(stockPrice);
        stockPrice.setBounds(280, 140, 50, 22);

        jLabel5.setText("Margin Rate:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(70, 120, 90, 16);

        marginField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        marginField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marginFieldActionPerformed(evt);
            }
        });
        getContentPane().add(marginField);
        marginField.setBounds(260, 110, 70, 22);

        usdToggle.setText("USD");
        usdToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usdToggleActionPerformed(evt);
            }
        });
        getContentPane().add(usdToggle);
        usdToggle.setBounds(160, 50, 70, 22);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Margin:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(87, 270, 80, 16);

        marginLabel.setText("$0.00");
        getContentPane().add(marginLabel);
        marginLabel.setBounds(220, 270, 100, 16);

        setSize(new java.awt.Dimension(416, 367));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
void update() {
    double conversion=1;
    if(usdToggle.isSelected()){
        conversion=1.3;
    }
        //initialize
        String feedback = "";
        int shares;
        // get each value
        boolean validBalance, validpips, validPrice, validMargin;
        //margin 
        String mar = marginField.getText();
        double margin = 1;
        try {
            margin = (Double.parseDouble(mar));
            validMargin = true;
        } catch (NumberFormatException e) {
            validMargin = false;
        }
        //balanceField
        String bal = accountBalance.getText();
        double balance = 0;
        //bal parse to double
        try {
            balance = (Double.parseDouble(bal)) / conversion;
            validBalance = true;
        } catch (NumberFormatException e) {
            validBalance = false;
        }
        //risk
        double risk = 0.02 * balance;
        //price
        double price = 0;
        String p = stockPrice.getText();
        //bal parse to double
        try {
            price = Double.parseDouble(p);
            validPrice = true;
        } catch (NumberFormatException e) {
            validPrice = false;
        }
        //pipsField
        String pip = pipsToStoploss.getText();
        double pips = 0;
        //parse to double
        try {
            pips = Double.parseDouble(pip);
            validpips = true;
        } catch (NumberFormatException e) {
            validpips = false;
        }
        //calculation
        if (validpips && validBalance && validPrice && validMargin) {
            shares = (int) (risk / pips * 100);
            //output to outputLabel and feedback
            int maxShares = (int) (balance * margin / price);
            if (maxShares < shares) {
                shares = maxShares;
            }
            //calc margin
            double usedMargin = (shares*price)/margin;
            //valid
            DecimalFormat f = new DecimalFormat("0");
            DecimalFormat dollars = new DecimalFormat("$#0.00");
            marginLabel.setText(dollars.format(usedMargin));
            outputLabel.setText(f.format(shares));
            
            feedbackLabel.setText("");
        } else {
            feedback = "Please enter real numbers into each field";
            //output to outputLabel and feedback
            //invalid
            outputLabel.setText("0");
            marginLabel.setText("$0.00");
            feedbackLabel.setText(feedback);
        }

    }
    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        update();
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void accountBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountBalanceActionPerformed
        update();
    }//GEN-LAST:event_accountBalanceActionPerformed

    private void stockPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockPriceActionPerformed
        update();
    }//GEN-LAST:event_stockPriceActionPerformed

    private void pipsToStoplossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipsToStoplossActionPerformed
        update();
    }//GEN-LAST:event_pipsToStoplossActionPerformed

    private void marginFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marginFieldActionPerformed
        update();
    }//GEN-LAST:event_marginFieldActionPerformed

    private void usdToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usdToggleActionPerformed
        update();
    }//GEN-LAST:event_usdToggleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountBalance;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField marginField;
    private javax.swing.JLabel marginLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField pipsToStoploss;
    private javax.swing.JTextField stockPrice;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JToggleButton usdToggle;
    // End of variables declaration//GEN-END:variables
}
